__version__ = (0, 0, 7)
#
#
# _           _            _ _
# | |         | |          (_) |
# | |     ___ | |_ ___  ___ _| | __
# | |    / _ \| __/ _ \/ __| | |/ /
# | |___| (_) | || (_) \__ \ |   <
# \_____/\___/ \__\___/|___/_|_|\_\
#
#              ¬© Copyright 2022
#
# üîí Licensed under the GNU AGPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta developer: @userbothikka3
# meta banner: https://i.imgur.com/awltLuz.jpeg


from .. import loader, utils
import asyncio


class TeaUseMod(loader.Module):
    """–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å @TeaUseBot (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —á–∞–π )"""

    strings = {"name": "TeaMod"}

    async def teacmd(self, message):
        """–í–∫–ª—é—á–∞–µ—Ç—Å—è –∫–æ–º–∞–Ω–¥–∞ `/tea`. –ß—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, `—á–∞–π —Å—Ç–æ–ø`."""
        self.set("tea", True)
        while self.get("tea"):
            await message.reply("/tea")
            await asyncio.sleep(0.1)
            await utils.answer(
                message,
                "–°–ª–µ–¥—É—é—â–∞—è –∫–æ–º–∞–Ω–¥–∞ –±—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∞ —á–µ—Ä–µ–∑ 1 —á–∞—Å –∏ 5 –º–∏–Ω—É—Ç.",
            )
            await asyncio.sleep(3960)

    async def watcher(self, message):
        if not getattr(message, "out", False):
            return

        if message.raw_text.lower() == "—á–∞–π —Å—Ç–æ–ø":
            self.set("tea", False)
            await utils.answer(message, "<b>—á–∞–π –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.</b>") 